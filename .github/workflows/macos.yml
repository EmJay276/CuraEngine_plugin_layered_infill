name: Macos Installer
run-name: ${{ inputs.PLUGIN_GIT_VERSION }} for Macos-${{ inputs.architecture }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      plugin_git_version:
        description: 'Plugin git Version'
        default: ''
        required: true
        type: string
      conan_args:
        description: 'Conan args: eq.: --require-override'
        default: ''
        required: false
        type: string
      architecture:
        description: 'Architecture'
        required: true
        default: 'X64'
        type: choice
        options:
          - X64
          - ARM64
      operating_system:
        description: 'OS'
        required: true
        default: 'macos-11'
        type: choice
        options:
          - self-hosted
          - macos-11
          - macos-12
  workflow_call:
    inputs:
      plugin_git_version:
        description: 'Plugin git Version'
        default: ''
        required: true
        type: string
      conan_args:
        description: 'Conan args: eq.: --require-override'
        default: ''
        required: false
        type: string
      architecture:
        description: 'Architecture'
        required: true
        default: 'X64'
        type: string
      operating_system:
        description: 'OS'
        required: true
        default: 'macos-11'
        type: string

env:
  PLUGIN_GIT_VERSION: ${{ inputs.plugin_git_version }}

jobs:
  cura-installer-create:
    runs-on: ${{ inputs.operating_system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.plugin_git_version }}

      - name: Setup Python and pip
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.x'
          cache: 'pip'
          cache-dependency-path: .github/workflows/requirements-conan-package.txt

      - name: Install Python requirements for runner
        run: pip install -r .github/workflows/requirements-conan-package.txt

      - name: Cache Conan local repository packages (Bash)
        uses: actions/cache@v3
        with:
          path: |
            $HOME/.conan/data
            $HOME/.conan/conan_download_cache
          key: conan-${{ runner.os }}-${{ runner.arch }}-installer-cache

      - name: Install MacOS system requirements
        run: brew install cmake autoconf automake ninja create-dmg

      - name: Get Conan configuration
        run: |
          conan config install https://github.com/jellespijker/conan-config.git
          conan config install https://github.com/jellespijker/conan-config.git -a "-b runner/${{ runner.os }}/${{ runner.arch }}"

      - name: Create the default Conan profile
        run: conan profile new default --detect --force

      - name: Use Conan download cache (Bash)
        run: conan config set storage.download_cache="$HOME/.conan/conan_download_cache"

      - name: Create the Packages (Powershell)
        run: |
          conan install . curaengine_plugin_infill_generate/${{ inputs.plugin_git_version }}@jellespijker/testing ${{ inputs.conan_args }} --build=missing --update -s curaengine_plugin_infill_generate:compiler.cppstd=20
          cmake --preset release
          cmake --build --preset release

      - name: Upload the binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ runner.arch }}
          path: |
            build/Release/curaengine_plugin_infill_generate
          retention-days: 5

      - name: Upload the cura plugin
        uses: actions/upload-artifact@v3
        with:
          name: macos-cura-plugin
          path: |
            CuraEngineInfillGenerate/**/*
          retention-days: 5

      - name: Write the run info
        shell: python
        run: |
          import os
          with open("run_info.sh", "w") as f:
              f.writelines(f'echo "PLUGIN_GIT_VERSION={os.environ["PLUGIN_GIT_VERSION"]}" >> $GITHUB_ENV\n')

      - name: Upload the run info
        uses: actions/upload-artifact@v3
        with:
          name: macos-run-info
          path: |
            run_info.sh
          retention-days: 5
